name: CI

on:
  push:
    branches: [ main, dev-* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    
    env:
      # API keys for optional services
      MORPH_API_KEY: ${{ secrets.MORPH_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      # Environment settings
      GITHUB_ACTIONS: true
      NON_INTERACTIVE: true
      LAKE_JOBS: 4
      LAKE_VERBOSE: 1
    
    steps:
      - uses: actions/checkout@v4
      
      # Install just (task runner)
      - uses: extractions/setup-just@v1
      
      # Run the unified installation script
      - name: Setup NumpySpec environment
        run: .github/scripts/setup.sh
      
      # Verify installations
      - name: Verify installations
        run: |
          echo "=== Core Tools ==="
          uv --version || echo "uv not found"
          lean --version || echo "lean not found"
          lake --version || echo "lake not found"
          python --version || echo "python not found"
          
          echo ""
          echo "=== CLI Tools ==="
          just --version || echo "just not found"
          rg --version | head -1 || echo "ripgrep not found"
          fd --version || echo "fd not found"
          jq --version || echo "jq not found"
          gh --version || echo "GitHub CLI not found"
      
      # Cache Lean dependencies
      - name: Cache Lean dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.elan
            .lake
            lake-packages
          key: ${{ runner.os }}-lean-${{ hashFiles('lean-toolchain', 'lake-manifest.json') }}
          restore-keys: |
            ${{ runner.os }}-lean-
      
      # Build Lean project
      - name: Build Lean project
        run: lake build
      
      # Run Python tests
      - name: Run Python tests
        run: uv run -m pytest -v
      
      # Run Lean tests (if any)
      - name: Run Lean tests
        run: |
          if [ -d "test" ]; then
            lake test || echo "Lean tests failed"
          else
            echo "No Lean test directory found"
          fi
      
      # Lint check
      - name: Lint check
        run: lake build --verbose || echo "Lint check failed"
      
      # Upload artifacts on failure
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: failure-logs-${{ matrix.os }}
          path: |
            .lake/build/trace
            logs/
            *.log