---
description: Building the project.
globs: 
alwaysApply: false
---
# Lean Toolchain Sync with Verso Nightly

## Introduction / Problem
Verso currently depends on nightly releases of Lean 4 and will fail to build with older stable versions. Therefore the root [`lean-toolchain`](mdc:lean-toolchain) **must** track the same nightly hash used by Verso whenever Verso is present in the dependency graph. Forgetting to do this leads to mysterious elaboration errors during `lake build`.

## Pattern Description
1. Locate Verso's own toolchain file inside the Verso repository or the vendored copy in `.lake/packages/verso/lean-toolchain`.
2. Copy the nightly version string (e.g. `leanprover/lean4:v4.21.0-nightly-2024-07-01`) into the project-root [`lean-toolchain`](mdc:lean-toolchain).
3. Run `lake update` followed by `lake build` to ensure the solver picks compatible mathlib and std versions.
4. Commit the change with a message such as `toolchain: bump to v4.21.0-nightly-2024-07-01 to match Verso`.

```bash
# example command sequence
cp .lake/packages/verso/lean-toolchain ./lean-toolchain
lake update
lake build
```

### Automation Suggestion
Add a Justfile command:
```just
update-toolchain-verso:
    cp .lake/packages/verso/lean-toolchain lean-toolchain
    lake update
```
Run `just update-toolchain-verso` after each Verso version bump.

## Real-World Example
When upgrading Verso from `0.4.0` to `0.5.0`, Verso switched to Lean `v4.22.0-nightly-2024-11-06`. The commit [`1a2b3c`](mdc:.git/1a2b3c) updated [`lean-toolchain`](mdc:lean-toolchain) accordingly and the build succeeded.

## Common Pitfalls / Anti-Patterns
* **Using a stable Lean tag** while Verso expects a nightly â†’ build fails.
* Updating Verso without updating the toolchain.
* Manually editing the toolchain string inconsistently; always copy it verbatim.
* Forgetting to run `lake update`, leading to mismatched dependency locks.
