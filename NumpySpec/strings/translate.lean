/-!
{
  "name": "numpy.strings.translate",
  "category": "String transformation",
  "description": "For each element in a, return a copy of the string where all characters occurring in the optional argument deletechars are removed, and the remaining characters have been mapped through the given translation table",
  "url": "https://numpy.org/doc/stable/reference/generated/numpy.strings.translate.html",
  "doc": "For each element in \`a\`, return a copy of the string where all characters occurring in the optional argument \`deletechars\` are removed, and the remaining characters have been mapped through the given translation table.\n\nParameters\n----------\na : array_like, with \`bytes_\` dtype\ntable : array_like with \`bytes_\` dtype and shape (1, 256)\n    String of 256 bytes. Characters to map to (length 256)\ndeletechars : array_like, with \`bytes_\` dtype, optional\n    Characters to delete. If not given, no deletion occurs.\n\nReturns\n-------\nout : ndarray\n    Output array of \`bytes_\` dtype",
  "code": "def translate(a, table, deletechars=None):\n    \"\"\"\n    For each element in \`\`a\`\`, return a copy of the string where\n    all characters occurring in the optional argument\n    \`\`deletechars\`\` are removed, and the remaining characters have\n    been mapped through the given translation table.\n\n    Parameters\n    ----------\n    a : array_like, with \`\`bytes_\`\` dtype\n\n    table : array_like with \`\`bytes_\`\` dtype and shape (1, 256)\n        If the \`\`table\`\` dtype is not \"bytes\" it will be casted.\n\n    deletechars : array_like, with \`\`bytes_\`\` dtype\n        If the \`\`deletechars\`\` dtype is not \"bytes\" it will be casted.\n\n    Returns\n    -------\n    out : ndarray\n        Output array of \`\`bytes_\`\` dtype\n\n    See Also\n    --------\n    bytes.translate\n\n    Examples\n    --------\n    >>> a = np.array(['a1b2c3'], dtype='S7')\n    >>> table = b''.join([chr(i).encode('latin1') for i in range(256)])\n    >>> deletechars = b'abc'\n    >>> np.strings.translate(a, table, deletechars)\n    array([b'123'], dtype='|S3')\n\n    \"\"\"\n    a = np.asanyarray(a)\n    table = np.asanyarray(table, dtype=np.bytes_)\n    if deletechars is None:\n        deletechars = np.array(b'', dtype=np.bytes_)\n    else:\n        deletechars = np.asanyarray(deletechars, dtype=np.bytes_)\n    if a.dtype.char != \"S\":\n        raise TypeError(\"translate is only available for byte strings\")\n    if table.dtype.char != \"S\":\n        raise TypeError(\"table must be a byte string with length 256\")\n    if deletechars.dtype.char != \"S\":\n        raise TypeError(\"deletechars must be a byte string\")\n    if table.size != 256:\n        raise ValueError(\"table must be a byte string with length 256\")\n    return _translate_ufunc(a, table, deletechars)"
}
-/

-- TODO: Implement translate
