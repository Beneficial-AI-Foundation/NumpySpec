/-!
{
  "name": "numpy.strings.rpartition",
  "category": "String operations",
  "description": "Partition each element in a around the right-most separator",
  "url": "https://numpy.org/doc/stable/reference/generated/numpy.strings.rpartition.html",
  "doc": "Partition (split) each element around the right-most separator.\n\nFor each element in \`a\`, split the element at the last occurrence of \`sep\`, and return a 3-tuple containing the part before the separator, the separator itself, and the part after the separator. If the separator is not found, the third item of the tuple will contain the whole string, and the first and second ones will be empty strings.\n\nParameters\n----------\na : array_like, with \`StringDType\`, \`bytes_\` or \`str_\` dtype\n    Input array\nsep : array_like, with \`StringDType\`, \`bytes_\` or \`str_\` dtype\n    Right-most separator to split each string element in \`a\`\n\nReturns\n-------\nout : 3-tuple of ndarrays\n    Three arrays of \`StringDType\`, \`bytes_\` or \`str_\` dtype,\n    depending on input types",
  "code": "def rpartition(a, sep):\n    \"\"\"\n    Partition (split) each element around the right-most separator.\n\n    For each element in \`\`a\`\`, split the element at the last occurrence\n    of \`\`sep\`\`, and return a 3-tuple containing the part before the\n    separator, the separator itself, and the part after the separator.\n    If the separator is not found, the third item of the tuple will\n    contain the whole string, and the first and second ones will be empty\n    strings.\n\n    Parameters\n    ----------\n    a : array_like, with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype\n        Input array\n    sep : array_like, with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype\n        Separator to split each string element in \`\`a\`\`.\n\n    Returns\n    -------\n    out : 3-tuple:\n        - array with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype with the\n          part before the separator\n        - array with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype with the\n          separator\n        - array with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype with the\n          part after the separator\n\n    See Also\n    --------\n    str.rpartition\n\n    Examples\n    --------\n    >>> a = np.array(['aAaAaA', '  aA  ', 'abBABba'])\n    >>> np.strings.rpartition(a, 'A')\n    (array(['aAaA', '  a', 'abB'], dtype='<U4'),\n     array(['A', 'A', 'A'], dtype='<U1'),\n     array(['aA', '  ', 'Bba'], dtype='<U3'))\n\n    \"\"\"\n    a = np.asanyarray(a)\n    sep = np.asanyarray(sep, dtype=a.dtype)\n    if not _is_string_dtype(a.dtype):\n        raise TypeError(\"string operation on non-string array\")\n    if not _is_string_dtype(sep.dtype):\n        raise TypeError(\"string operation on non-string array\")\n    return _rpartition_ufunc(a, sep)"
}
-/

-- TODO: Implement rpartition
