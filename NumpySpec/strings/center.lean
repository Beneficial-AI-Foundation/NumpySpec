/-!
{
  "name": "numpy.strings.center",
  "category": "String operations",
  "description": "Return a copy of a with its elements centered in a string of length width",
  "url": "https://numpy.org/doc/stable/reference/generated/numpy.strings.center.html",
  "doc": "Return a copy of a with its elements centered in a string of length width.\n\nParameters\n----------\na : array_like, with \`StringDType\`, \`bytes_\` or \`str_\` dtype\nwidth : array_like, with any integer dtype\n    The length of the resulting strings, unless \`\`width < str_len(a)\`\`.\nfillchar : array_like, with \`StringDType\`, \`bytes_\` or \`str_\` dtype, optional\n    The padding character to use. Default is space.\n\nReturns\n-------\nout : ndarray\n    Output array of \`StringDType\`, \`bytes_\` or \`str_\` dtype,\n    depending on input types\n\nExamples\n--------\n>>> c = np.array(['a1b2','1b2a','b2a1','2a1b']); c\narray(['a1b2', '1b2a', 'b2a1', '2a1b'], dtype='<U4')\n>>> np.strings.center(c, width=9)\narray(['   a1b2  ', '   1b2a  ', '   b2a1  ', '   2a1b  '], dtype='<U9')",
  "code": "def center(a, width, fillchar=' '):\n    \"\"\"\n    Return a copy of \`a\` with its elements centered in a string of\n    length \`width\`.\n\n    Parameters\n    ----------\n    a : array_like, with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype\n    width : array_like, with any integer dtype\n        The length of the resulting strings, unless \`\`width < str_len(a)\`\`.\n    fillchar : array_like, with \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype, optional\n        The padding character to use. Default is space.\n\n    Returns\n    -------\n    out : ndarray\n        Output array of \`\`StringDType\`\`, \`\`bytes_\`\` or \`\`str_\`\` dtype,\n        depending on input types\n\n    See Also\n    --------\n    ljust, rjust\n\n    Notes\n    -----\n    This function is intended to work with arrays of strings.  The\n    fill character is not applied to numeric types.\n\n    Examples\n    --------\n    >>> c = np.array(['a1b2','1b2a','b2a1','2a1b']); c\n    array(['a1b2', '1b2a', 'b2a1', '2a1b'], dtype='<U4')\n    >>> np.strings.center(c, width=9)\n    array(['   a1b2  ', '   1b2a  ', '   b2a1  ', '   2a1b  '], dtype='<U9')\n    >>> np.strings.center(c, width=9, fillchar='*')\n    array(['***a1b2**', '***1b2a**', '***b2a1**', '***2a1b**'], dtype='<U9')\n    >>> np.strings.center(c, width=1)\n    array(['a1b2', '1b2a', 'b2a1', '2a1b'], dtype='<U4')\n\n    \"\"\"\n    a = np.asanyarray(a)\n    fillchar = np.asanyarray(fillchar, dtype=a.dtype)\n    width = np.asanyarray(width)\n    if not _is_string_dtype(a.dtype):\n        raise TypeError(\"string operation on non-string array\")\n    if not _is_string_dtype(fillchar.dtype):\n        raise TypeError(\"string operation on non-string array\")\n    if width.dtype.kind not in \"iu\":\n        raise TypeError(f\"expected an integer array-like, got {width.dtype}\")\n    if np.any(str_len(fillchar) != 1):\n        raise TypeError(\"The fill character must be exactly one character long\")\n    return _center_ljust_rjust_ufunc(a, width, fillchar, 0)"
}
-/

-- TODO: Implement center
