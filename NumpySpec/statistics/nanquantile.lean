/-!
{
  "name": "numpy.nanquantile",
  "category": "Order statistics",
  "description": "Compute the q-th quantile of the data along the specified axis, ignoring nan values",
  "url": "https://numpy.org/doc/stable/reference/generated/numpy.nanquantile.html",
  "doc": "numpy.nanquantile(a, q, axis=None, out=None, overwrite_input=False, method='linear', keepdims=False, *, weights=None, interpolation=None)\n\nCompute the q-th quantile of the data along the specified axis, ignoring nan values.\n\nReturns the q-th quantile(s) of the array elements.\n\nParameters\n----------\na : array_like\n    Input array or object that can be converted to an array, containing nan values to be ignored.\nq : array_like of float\n    Quantile or sequence of quantiles to compute, which must be between 0 and 1 inclusive.\naxis : {int, tuple of int, None}, optional\n    Axis or axes along which the quantiles are computed.\nout : ndarray, optional\n    Alternative output array in which to place the result.\noverwrite_input : bool, optional\n    If True, then allow the input array a to be modified by intermediate calculations.\nmethod : str, optional\n    Method to use for estimating the quantile.\nkeepdims : bool, optional\n    If this is set to True, the axes which are reduced are left in the result as dimensions with size one.\nweights : array_like, optional\n    An array of weights associated with the values in a.\ninterpolation : str, optional\n    Deprecated name for the method keyword argument.\n\nReturns\n-------\nquantile : scalar or ndarray\n    If q is a single quantile and axis=None, then the result is a scalar.",
  "code": "# Implementation in numpy/lib/_nanfunctions_impl.py\n@array_function_dispatch(_nanquantile_dispatcher)\ndef nanquantile(a,\n                q,\n                axis=None,\n                out=None,\n                overwrite_input=False,\n                method=\"linear\",\n                keepdims=np._NoValue,\n                *,\n                weights=None,\n                interpolation=None):\n    \"\"\"\n    Compute the q-th quantile of the data along the specified axis,\n    ignoring nan values.\n    \"\"\"\n    if interpolation is not None:\n        _raise_warning(interpolation, method)\n    \n    a = np.asanyarray(a)\n    if a.dtype.char in \"SUV\":  # strings/unicode/void\n        raise TypeError(\"a must be an array of numerical dtype\")\n    \n    q = np.asanyarray(q)\n    if not _quantile_is_valid(q):\n        raise ValueError(\"Quantiles must be in the range [0, 1]\")\n    \n    return _nanquantile(a, q, axis, out, overwrite_input, method, keepdims,\n                        weights)"
}
-/

-- TODO: Implement nanquantile
